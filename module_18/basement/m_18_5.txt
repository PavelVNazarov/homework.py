Задача включает создание веб-приложения на Django с формой регистрации пользователей.Начнем поэтапно.

Шаг 1: Создание приложения
Создать новое приложение с именем task5:
python manage.py startapp task5

Шаг 2: Создание шаблона
Создать файл registration_page.html в директории templates/fifth_task/ с содержимым:

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Регистрация</title>
</head>
<body>
    <h1>Форма регистрации</h1>

    {% if error %}
        <p style="color:red;">{{ error }}</p>
    {% endif %}

    <form method="POST">
        {% csrf_token %}
        <div>
            <label for="username">Введите логин:</label>
            <input type="text" id="username" name="username" maxlength="30" required>
        </div>
        <div>
            <label for="password">Введите пароль:</label>
            <input type="password" id="password" name="password" minlength="8" required>
        </div>
        <div>
            <label for="repeat_password">Повторите пароль:</label>
            <input type="password" id="repeat_password" name="repeat_password" minlength="8" required>
        </div>
        <div>
            <label for="age">Введите свой возраст:</label>
            <input type="number" id="age" name="age" maxlength="3" required>
        </div>
        <button type="submit">Зарегистрироваться</button>
    </form>
</body>
</html>

Шаг 3: Создание формы
В файле task5/forms.py создать форму UserRegister:

from django import forms

class UserRegister(forms.Form):
    username = forms.CharField(max_length=30, label="Введите логин")
    password = forms.CharField(min_length=8, widget=forms.PasswordInput, label="Введите пароль")
    repeat_password = forms.CharField(min_length=8, widget=forms.PasswordInput, label="Повторите пароль")
    age = forms.IntegerField(max_value=999, label="Введите свой возраст")

    
Шаг 4: Создание представлений
В файле task5/views.py создать представления:

from django.shortcuts import render
from .forms import UserRegister

def sign_up_by_django(request):
    return sign_up(request, "sign_up_by_django")

def sign_up_by_html(request):
    return sign_up(request, "sign_up_by_html")

def sign_up(request, method_name):
    users = ["user1", "user2", "user3"]
    info = {}

    if request.method == "POST":
        form = UserRegister(request.POST)
        if form.is_valid():
            username = form.cleaned_data['username']
            password = form.cleaned_data['password']
            repeat_password = form.cleaned_data['repeat_password']
            age = form.cleaned_data['age']

            if username in users:
                info['error'] = 'Пользователь уже существует'
            elif age < 18:
                info['error'] = 'Вы должны быть старше 18'
            elif password != repeat_password:
                info['error'] = 'Пароли не совпадают'
            else:
                info['message'] = f'Приветствуем, {username}!'
        else:
            info['form'] = form
    else:
        info['form'] = UserRegister()

    return render(request, 'fifth_task/registration_page.html', info)
    
Шаг 5: Настройка URL маршрутов
В файле urls.py проекта добавить маршруты:

from django.urls import path
from task5.views import sign_up_by_django, sign_up_by_html

urlpatterns = [
    path('', sign_up_by_django, name='sign_up_by_django'),
    path('django_sign_up/', sign_up_by_html, name='sign_up_by_html'),
]


Шаг 6: Подключение приложения
Добавить task5 в Ваш INSTALLED_APPS в файле settings.py проекта:

INSTALLED_APPS = [
    # ...
    'task5',
]


Шаг 7: Запуск сервера
Запустить сервер и проверить работу рендеринга формы регистрации:

python manage.py runserver
Перейти по адресу http://127.0.0.1:8000/, чтобы увидеть форму регистрации.
Вводиье данные и проверять работу логики обработки.

Чтобы реализовать задачу "Имитация регистрации", мы будем выполнять следующие шаги:

Создание приложения task5.
Создание шаблона registration_page.html.
Создание формы UserRegister.
Создание представлений sign_up_by_django и sign_up_by_html.
Настройка маршрутов в urls.py.
Давайте пройдемся по каждому шагу подробно.

Шаг 1: Создание приложения task5
Откройте терминал и создайте новое приложение:

Bash
Копировать
cd UrbanDjango
python manage.py startapp task5
Шаг 2: Создание шаблона registration_page.html
Создайте файл registration_page.html в директории templates/fifth_task/ и добавьте следующий код:

HTML, XML
Копировать
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Регистрация</title>
</head>
<body>
    <h1>Регистрация</h1>
    
    <form method="POST">
        {% csrf_token %}
        <label for="username">Введите логин:</label>
        <input type="text" id="username" name="username" maxlength="30" required><br>

        <label for="password">Введите пароль:</label>
        <input type="password" id="password" name="password" minlength="8" required><br>

        <label for="repeat_password">Повторите пароль:</label>
        <input type="password" id="repeat_password" name="repeat_password" minlength="8" required><br>

        <label for="age">Введите свой возраст:</label>
        <input type="number" id="age" name="age" max="999" required><br>

        <button type="submit">Зарегистрироваться</button>
    </form>

    {% if error %}
        <p style="color: red;">{{ error }}</p>
    {% endif %}
</body>
</html>
Шаг 3: Создание формы UserRegister
В файле task5/forms.py создайте форму, унаследованную от Django форм:

Python
Копировать
from django import forms

class UserRegister(forms.Form):
    username = forms.CharField(max_length=30, label="Введите логин")
    password = forms.CharField(min_length=8, widget=forms.PasswordInput, label="Введите пароль")
    repeat_password = forms.CharField(min_length=8, widget=forms.PasswordInput, label="Повторите пароль")
    age = forms.IntegerField(max_value=999, label="Введите свой возраст")
Шаг 4: Создание представлений sign_up_by_django и sign_up_by_html
В файле task5/views.py создайте соответственно два представления:

Python
Копировать
from django.shortcuts import render
from .forms import UserRegister

# Псевдо-список существующих пользователей
users = ["user1", "user2", "user3"]

def sign_up_by_django(request):
    info = {}
    if request.method == "POST":
        form = UserRegister(request.POST)
        if form.is_valid():
            username = form.cleaned_data['username']
            password = form.cleaned_data['password']
            repeat_password = form.cleaned_data['repeat_password']
            age = form.cleaned_data['age']

            if password != repeat_password:
                info['error'] = 'Пароли не совпадают'
            elif age < 18:
                info['error'] = 'Вы должны быть старше 18'
            elif username in users:
                info['error'] = 'Пользователь уже существует'
            else:
                return render(request, 'fifth_task/registration_page.html', {"info": info, "success": f"Приветствуем, {username}!"})

    else:
        form = UserRegister()

    info['form'] = form
    return render(request, 'fifth_task/registration_page.html', info)

def sign_up_by_html(request):
    # Можно реализовать аналогично первому представлению
    return sign_up_by_django(request)
Шаг 5: Настройка маршрутов в urls.py
В UrbanDjango/urls.py добавьте соответствующие маршруты:

Python
Копировать
from django.contrib import admin
from django.urls import path
from task5.views import sign_up_by_django, sign_up_by_html

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', sign_up_by_django, name='sign_up'),
    path('django_sign_up/', sign_up_by_html, name='django_sign_up'),
]
Шаг 6: Подключение приложения
Не забудьте добавить task5 в INSTALLED_APPS в файле settings.py Вашего проекта:

Python
Копировать
INSTALLED_APPS = [
    ...
    'task5',
]
Шаг 7: Запуск сервера и проверка
Теперь запустите сервер и проверьте регистрацию:

Bash
Копировать
python manage.py runserver
Откройте браузер и перейдите по адресу http://127.0.0.1:8000/ для проверки основной страницы регистрации и http://127.0.0.1:8000/django_sign_up/ для проверки альтернативно представления.

Проверка работы
Введите правильные данные для всех полей и убедитесь, что Вы получите приветственное сообщение.
Попробуйте ввести несовпадающие пароли, возраст меньше 18 лет или имя пользователя, которое уже существует, чтобы увидеть соответствующие сообщения об ошибках.
