Код с разьяснением

import re

def extract_image_links(html_text):
    # Регулярное выражение для поиска ссылок на изображения
    pattern = r'<img\s+[^>]*src=[\'"]?(https?://[^\'" >]+?\.(?:jpg|jpeg|png|gif))[\'"]?'
    # Находим все совпадения по регулярному выражению
    image_links = re.findall(pattern, html_text, re.IGNORECASE)
    return image_links

# Пример использования
sample_html = "<img src='https://example.com/image1.jpg'> <img src='http://example.com/image2.png'> <img src='https://example.com/image3.gif'>"
image_links = extract_image_links(sample_html)

if image_links:
    for image_link in image_links:
        print(image_link)
else:
    print("Нет ссылок с картинками в HTML тексте.")
Объяснение:
Импорт библиотеки: Подключаем модуль re, который необходим для работы с регулярными выражениями.

Определение функции: Функция extract_image_links принимает строку html_text, которая содержит HTML-код.

Регулярное выражение:

<img\s+[^>]*src=[\'"]?: ищет тег <img> и его атрибут src.
(https?://[^\'" >]+?\.(?:jpg|jpeg|png|gif)): захватывает URL-адреса, начинающиеся с http:// или https:// и заканчивающиеся на jpg, jpeg, png или gif.
re.IGNORECASE: делает поиск нечувствительным к регистру.
Поиск совпадений: Функция re.findall ищет все совпадения в исходном тексте и возвращает их в виде списка.

Вывод результата: Если список найденных ссылок не пустой, выводим их на консоль, иначе сообщает о отсутствии ссылок.
