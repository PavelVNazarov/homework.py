Код по частям, что делает каждый оператор:

Импорт библиотеки:

import sqlite3
Импортирует библиотеку sqlite3, которая позволяет работать с SQLite базами данных.

Создание или подключение к базе данных:

conn = sqlite3.connect('not_telegram.db')
cursor = conn.cursor()
Создает или открывает базу данных not_telegram.db. Если файл базы данных не существует, он будет создан. cursor позволяет выполнять SQL-запросы к базе данных.

Создание таблицы:

cursor.execute('''
CREATE TABLE IF NOT EXISTS Users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL,
    email TEXT NOT NULL,
    age INTEGER,
    balance INTEGER NOT NULL
)
''')
Создает таблицу Users, если она еще не существует. Таблица имеет четыре поля:

id: автоинкрементный первичный ключ,
username: имя пользователя,
email: адрес электронной почты,
age: возраст пользователя,
balance: баланс пользователя.
Заполнение таблицы данными:

users = [("User1", "example1@gmail.com", 10, 1000), ...]
cursor.executemany("INSERT INTO Users (username, email, age, balance) VALUES (?, ?, ?, ?)", users)
Список users содержит пары данных для пользователей. executemany вставляет все записи в таблицу Users за один раз.

Обновление значения баланса:

cursor.execute("UPDATE Users SET balance = 500 WHERE id % 2")
Обновляет поле balance до 500 для каждой второй записи, начиная с первой (то есть для четных id).

Удаление записей:

cursor.execute("DELETE FROM Users WHERE id % 3 == 1")
Удаляет каждую третью запись, начиная с первой (то есть для id, которые при делении на 3 дают 1).

Выборка записей:

cursor.execute("SELECT username, email, age, balance FROM Users WHERE age != 60")
results = cursor.fetchall()
Выбирает все записи из таблицы Users, где age не равен 60. Сохраняет результаты в переменной results.

Вывод результатов:

for row in results:
    username, email, age, balance = row
    print(f"Имя: {username} | Почта: {email} | Возраст: {age} | Баланс: {balance}")
Перебирает все записи в results и выводит их в указанном формате.

Сохранение изменений и закрытие соединения:

Копировать
conn.commit()
conn.close()
commit сохраняет все изменения в базе данных, а close закрывает соединение с базой.
